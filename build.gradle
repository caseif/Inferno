plugins {
    id 'checkstyle'

    id 'org.spongepowered.plugin' version '0.7'
    id 'net.minecrell.licenser' version '0.3'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}
defaultTasks 'clean', 'updateLicenses', 'build'

group = 'net.caseif.flint.inferno'
version = '1.3.0-SNAPSHOT'

// Extended project information
ext.projectName = 'inferno'
ext.description = 'The implementation of Flint minigame framework for the Sponge Minecraft server mod.'
ext.inceptionYear = '2016'
ext.packaging = 'jar'

configurations {
    shadow
    compile {
        extendsFrom shadow
    }
}

repositories {
	maven {
		name 'caseif'
		url 'http://repo.caseif.net/content/groups/public/'
	}
    maven {
        name 'minecrell'
        url 'http://repo.minecrell.net/releases'
    }
}

ext {
    versionSuffix = version.contains('SNAPSHOT') ? (
            (
                    System.getenv('GIT_COMMIT') ? ('-git('
                            + System.getenv('GIT_BRANCH')
                            .substring(System.getenv('GIT_BRANCH').split('/')[0].length() + 1) + '-'
                            + System.getenv('GIT_COMMIT').substring(0, 7) + ')') : ''
            )
                    + (System.getenv('BUILD_NUMBER') ? '-jnks' + System.getenv('BUILD_NUMBER') : '')
    ) : ''

    commonVersion = '1.3.4'
}

dependencies {
    compile 'org.spongepowered:spongeapi:5.1.0-SNAPSHOT'
    shadow "net.caseif.flint.common:flintcommon:${commonVersion}"
    shadow 'net.minecrell.mcstats:statslite-sponge:0.2.2'

    checkstyle 'org.spongepowered:checkstyle:6.1.1-sponge1'
}

license {
    header file('HEADER.txt')
}

// Read source files using UTF-8
tasks.withType(org.gradle.api.tasks.compile.JavaCompile) {
    options.encoding = 'UTF-8'
}

// check code style
checkstyle {
    configProperties = [
            'name': project.name,
            'year': project.inceptionYear,
            'basedir': project.projectDir,
            'severity': 'warning'
    ]
    configFile = file('etc/checkstyle.xml')
}

jar {
    classifier = 'base'
}

jar.manifest.mainAttributes(
        'Created-By': System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")",
        'Specification-Title': 'Flint',
        'Specification-Version': '1.3.1',
        'Specification-Vendor': 'Max Roncace',
        'Implementation-Title': name,
        'Implementation-Version': version + versionSuffix
)

processResources {
    from 'LICENSE.txt'
    filter { String line -> line.replace('SNAPSHOT', 'SNAPSHOT' + versionSuffix) }
}

shadowJar {
    configurations = [project.configurations.shadow]
    classifier = ''

    dependencies {
        include dependency('net.caseif.flint.common:flintcommon')
        include dependency('net.minecrell.mcstats:statslite-sponge')
    }

    relocate 'net.minecrell.mcstats', 'net.caseif.flint.inferno.lib.net.minecrell.mcstats'
}

task sourceJar(type: Jar) {
    from sourceSets.main.java
    from sourceSets.main.resources
    classifier = 'sources'
}

artifacts {
    archives shadowJar
    archives sourceJar
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}
